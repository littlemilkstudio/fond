webpackJsonp([0],{

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/lib/index.js!./node_modules/sass-loader/lib/loader.js!./src/index.scss":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/*\n *  BASE\n *  Import all helpers, core styles and components\n *\n */\n/* Helpers: re-usable code (nothing here is compiled directly) */\n/* ------------------------------------------------------------ *|* Breakpoints\n\\* ------------------------------------------------------------ */\n/* Mobile */\n/* Tablet */\n/* Desktop */\n/* This is becoming a joke! Find a better way to name breakpoints. */\n/* ------------------------------------------------------------ *|* Misc\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Global\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Footer\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Blog\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Blog & Events\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Jobs\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Events\n\\* ------------------------------------------------------------ */\n/* ------------------------------------------------------------ *|* Hovers\n\\* ------------------------------------------------------------ */\n/*\n *  COLOURS\n *  A collection of all the colours used throughout the site as individual variables or grouped into palettes\n *\n *  \n*/\n/* Hollis*/\n/* other */\n/* Palettes */\n/*\n *  MIXINS\n *\n *  Notes: Try to avoid using 'fixed' attributes within mixins,\n *         i.e. only use mixins to pass in a value\n */\n/*\n *  WORDPRESS STYLES\n *  Modifying some classes that are owned by wordpress\n *\n */\n.alignleft {\n  display: block;\n  margin: 0 auto;\n  text-align: left; }\n\n.aligncenter {\n  display: block;\n  margin: 0 auto;\n  text-align: center; }\n\n.alignright {\n  display: block;\n  margin: 0 auto;\n  text-align: right; }\n\n/* Foundation: Normalise, resets, base styles & typography */\n/**\n* 1. Set default font family to sans-serif.\n* 2. Prevent iOS and IE text size adjust after device orientation\n*    change, without disabling\n*    user zoom.\n*/\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/**\n* Remove default margin.\n*/\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n* Correct `block` display not defined for any HTML5 element in IE 8/9.\n* Correct `block` display not defined for `details` or `summary` in IE 10/11\n* and Firefox.\n* Correct `block` display not defined for `main` in IE 11.\n*/\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\n/**\n* 1. Correct `inline-block` display not defined in IE 8/9.\n* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n*/\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n* Prevent modern browsers from displaying `audio` without controls.\n* Remove excess height in iOS 5 devices.\n*/\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n   * Address `[hidden]` styling not present in IE 8/9/10.\n   */\n[hidden] {\n  display: none; }\n\n/**\n* Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n*/\ntemplate {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n   * Remove the gray background color from active links in IE 10.\n   */\na {\n  background-color: transparent; }\n\n/**\n* Improve readability of focused elements when they are also in an\n* active/hover state.\n*/\na:active,\na:hover {\n  outline: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n* Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n*/\nabbr[title] {\n  border-bottom: 1px dotted; }\n\n/**\n* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n*/\nb,\nstrong {\n  font-weight: bold; }\n\n/**\n* Address styling not present in Safari and Chrome.\n*/\ndfn {\n  font-style: italic; }\n\n/**\n* Address variable `h1` font-size and margin within `section` and `article`\n* contexts in Firefox 4+, Safari, and Chrome.\n*/\nh1 {\n  font-size: 2em;\n  margin: 0.66667em 0; }\n\n/**\n   * Address styling not present in IE 8/9.\n   */\nmark {\n  background: #ff0;\n  color: #000; }\n\n/**\n* Address inconsistent and variable font size in all browsers.\n*/\nsmall {\n  font-size: 80%; }\n\n/**\n* Prevent `sub` and `sup` affecting `line-height` in all browsers.\n*/\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n   * Remove border when inside `a` element in IE 8/9/10.\n   */\nimg {\n  border: 0; }\n\n/**\n   * Correct overflow not hidden in IE 9/10/11.\n   */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n   * Address margin not present in IE 8/9 and Safari.\n   */\nfigure {\n  margin: 1em 2.778vw; }\n\n/**\n* Address differences between Firefox and other browsers.\n*/\nhr {\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box;\n  height: 0; }\n\n/**\n* Contain overflow in all browsers.\n*/\npre {\n  overflow: auto; }\n\n/**\n* Address odd `em`-unit font size rendering in all browsers.\n*/\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n/* Forms\n   ========================================================================== */\n/**\n* Known limitation: by default, Chrome and Safari on OS X allow very limited\n* styling of `select`, unless a `border` property is set.\n*/\n/**\n* 1. Correct color not being inherited.\n*    Known issue: affects color of disabled elements.\n* 2. Correct font properties not being inherited.\n* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */ }\n\n/**\n   * Address `overflow` set to `hidden` in IE 8/9/10/11.\n   */\nbutton {\n  overflow: visible; }\n\n/**\n* Address inconsistent `text-transform` inheritance for `button` and `select`.\n* All other form control elements do not inherit `text-transform` values.\n* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n* Correct `select` style inheritance in Firefox.\n*/\nbutton,\nselect {\n  text-transform: none; }\n\n/**\n* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n*    and `video` controls.\n* 2. Correct inability to style clickable `input` types in iOS.\n* 3. Improve usability and consistency of cursor style between image-type\n*    `input` and others.\n*/\nbutton,\nhtml input[type='button'],\ninput[type='reset'],\ninput[type='submit'] {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */ }\n\n/**\n* Re-set default cursor for disabled elements.\n*/\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\n/**\n* Remove inner padding and border in Firefox 4+.\n*/\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\n/**\n* Address Firefox 4+ setting `line-height` on `input` using `!important` in\n* the UA stylesheet.\n*/\ninput {\n  line-height: normal; }\n\n/**\n   * It's recommended that you don't attempt to style these elements.\n   * Firefox's implementation doesn't respect box-sizing, padding, or width.\n   *\n   * 1. Address box sizing set to `content-box` in IE 8/9/10.\n   * 2. Remove excess padding in IE 8/9/10.\n   */\ninput[type='checkbox'],\ninput[type='radio'] {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n* Fix the cursor style for Chrome's increment/decrement buttons. For certain\n* `font-size` values of the `input`, it causes the cursor style of the\n* decrement button to change from `default` to `text`.\n*/\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n* 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n* 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n*/\ninput[type='search'] {\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box; }\n\n/**\n* Remove inner padding and search cancel button in Safari and Chrome on OS X.\n* Safari (but not Chrome) clips the cancel button when the search input has\n* padding (and `textfield` appearance).\n*/\ninput[type='search']::-webkit-search-cancel-button,\ninput[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n* Define consistent border, margin, and padding.\n*/\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 0.139vw;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n* 1. Correct `color` not being inherited in IE 8/9/10/11.\n* 2. Remove padding so people aren't caught out if they zero out fieldsets.\n*/\nlegend {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n   * Remove default vertical scrollbar in IE 8/9/10/11.\n   */\ntextarea {\n  overflow: auto; }\n\n/**\n* Don't inherit the `font-weight` (applied by a rule above).\n* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n*/\noptgroup {\n  font-weight: bold; }\n\n/* Tables\n   ========================================================================== */\n/**\n* Remove most spacing between table cells.\n*/\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\nbutton, button:hover, button:active, button:focus {\n  border: none;\n  background-image: none;\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  background-color: transparent;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  border-width: 0;\n  border-style: none;\n  border-color: transparent;\n  -o-border-image: none 100% 1 0 stretch;\n     border-image: none 100% 1 0 stretch;\n  box-shadow: none;\n  outline: none; }\n\nsvg {\n  display: block;\n  height: auto;\n  width: auto; }\n\n* {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\n/*\n *  CORE ENVIRONMENT\n *  Foundations and global resets\n *\n */\nhtml {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\nbody {\n  position: relative;\n  overflow-x: hidden; }\n\nhtml,\nbody {\n  height: 100%; }\n\n*,\n*:before,\n*:after {\n  -webkit-box-sizing: inherit;\n          box-sizing: inherit; }\n\nhr {\n  margin: none;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  border: 0;\n  height: 1px;\n  -webkit-margin-before: 0;\n  -webkit-margin-after: 0;\n  -webkit-margin-start: 0;\n  -webkit-margin-end: 0; }\n\nul, ol {\n  padding: 0;\n  margin: 0; }\n\nli {\n  display: inline-block; }\n\ninput,\ntextarea,\nbutton,\nselect,\na {\n  -webkit-tap-highlight-color: transparent; }\n\ninput,\nbutton {\n  padding: 0;\n  border: none;\n  outline: 0; }\n\ninput {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n       appearance: none;\n  border-radius: 0; }\n\nimg {\n  width: 100%; }\n\nbutton {\n  background: transparent; }\n\nsvg {\n  margin: 0;\n  display: inline-block;\n  width: 100%; }\n\nblockquote {\n  margin: 0px; }\n\n.srt {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px; }\n\n.container {\n  width: 90%;\n  max-width: 79.861vw;\n  margin: 0 auto; }\n  @media screen and (max-width: 768px) {\n    .container, .container ._ {\n      width: 90%; } }\n\n/*\n *  TYPOGRAPHY\n *  Global fonts & styles of text\n *\n */\nhtml {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\nbody {\n  color: black; }\n\na {\n  color: inherit;\n  text-decoration: none; }\n  a:hover {\n    cursor: pointer;\n    color: inherit;\n    text-decoration: none;\n    outline: none; }\n\nh1, .h1,\nh2, .h2,\nh3, .h3,\nh4, .h4,\nh5, .h5 {\n  width: 100%;\n  margin: 0;\n  font-weight: normal;\n  line-height: 1; }\n\n/* Components */\n", ""]);

// exports


/***/ }),

/***/ "./src/components/app/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _jquery = __webpack_require__("./node_modules/jquery/dist/jquery.js");

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import { Controller } from 'scrollmagic';
//import Barba from 'barba.js';

/*   Components    */
//import '../navigation';


(0, _jquery2.default)(document).ready(function () {});

/***/ }),

/***/ "./src/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("./src/index.scss");

__webpack_require__("./src/components/app/index.js");

/***/ }),

/***/ "./src/index.scss":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/postcss-loader/lib/index.js!./node_modules/sass-loader/lib/loader.js!./src/index.scss");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/lib/index.js!../node_modules/sass-loader/lib/loader.js!./index.scss", function() {
			var newContent = require("!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/lib/index.js!../node_modules/sass-loader/lib/loader.js!./index.scss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ })

},["./src/index.js"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,